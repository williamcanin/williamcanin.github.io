@use "sass:map";

$light-terminal: (
  bg-color: #ffffff,
  text-color: #000000,
  text-muted-color: #3e3e3e,
  link-color: #00e,
);

$dark-terminal: (
  bg-color: #000000,
  text-color: #ffffff,
  text-muted-color: #3e3e3e,
  link-color: aqua,
);

@function theme-color-terminal($key, $mode: light) {
  @if $mode == light {
    @return map.get($light-terminal, $key);
  }
  @else if $mode == dark {
    @return map.get($dark-terminal, $key);
  }
  @return null;
}

$width_box: none !important;

%font_style {
  font-size: 16px !important;
  font-family: monospace !important;
}

%terminal_font_style {
  @extend %font_style;
  a {
    color: var(--link-color);
    @extend %font_style;
    font-weight: normal !important;
  }
  h1,h2,h3 {
    @extend %font_style;
  }
  blockquote {
    @extend %font_style;
  }
  p {
    @extend %font_style;
  }
}

body {
  background-color: var(--bg-color);
  @extend %terminal_font_style;
}

@keyframes blink {
  50% {
    opacity: 0;
  }
}

.terminal {
  width: min(960px, 96%);
  color: var(--text-color);
  max-width: 1100px;
  border-radius: 5px;
  position: relative;
  display: flex;
  flex-direction: column;
  min-height: 500px;
  max-height: 500px;
  background-color: var(--bg-color); // default: #040902
  overflow-y: hidden;
  @extend %terminal_font_style;

  &-fullscreen {
    // position: fixed;
    top: 0 !important;
    left: 0 !important;
    right: 0 !important;
    width: 100% !important;
    height: auto !important;
    max-height: none !important;
    max-width: none !important;
    border-radius: 0 !important;
    z-index: 100;
     @extend %terminal_font_style;
  }

  &-screen {
    overflow-y: auto;

    &::after {
      content: "";
      z-index: 1;
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      pointer-events: none;
      background-size: 100% 4px;
      opacity: 0.7;
    }

    .line-wrapper {
      color: var(--text-color);
      margin: 10px 0px !important;
      @extend %terminal_font_style;

      #mcmd,
      #mdesc {
        font-weight: bold;
        margin-bottom: 10px;
        text-decoration: underline;
         @extend %terminal_font_style;
      }

      #mcmd {
        margin-right: 100px;
         @extend %terminal_font_style;
      }

    }

    .line {
      // white-space: pre;
      // white-space: normal;
      word-wrap: break-word;
      display: flex;
      align-items: center;
      line-height: 1.4;
      @extend %terminal_font_style;
    }

    .prompt {
      color: var(--text-color);
      margin-right: 5px;
      @extend %terminal_font_style;
    }

    .input-wrapper {
      position: relative;
      display: inline-block;
      flex: 1;
      min-width: 50px;
       @extend %terminal_font_style;

      span {
        @extend %terminal_font_style;
      }
    }

    .input {
      background: transparent;
      border: none;
      outline: none;
      color: var(--text-color);
      caret-color: transparent;
      /* esconder caret real */
      width: 100%;
      padding: 0;
      margin: 0;
      white-space: nowrap;
       @extend %terminal_font_style;
    }

    .input-wrapper, .prompt , .input {
      font-weight: bold;
    }
    .input-wrapper {
      span {
        font-weight: bold;
      }
    }

    .measure {
      position: absolute;
      top: 0;
      left: 0;
      visibility: hidden;
      white-space: pre;
      pointer-events: none;
      @extend %terminal_font_style;
    }

    .cursor {
      position: absolute;
      top: 2px;
      left: 0;
      width: 9px;
      height: 18px;
      background-color: var(--text-color) !important;
      border-radius: 2px;
      animation: blink 1s steps(2, end) infinite;
      pointer-events: none;
      transform: translateY(0.2px);
      z-index: 2;
       @extend %terminal_font_style;
    }

    .scanlines {
      position: absolute;
      inset: 0;
      pointer-events: none;
      background-image: repeating-linear-gradient(180deg, rgba(0, 255, 0, 0.01) 0 1px, transparent 1px 3px);
      mix-blend-mode: overlay;
      opacity: 0.45;
      z-index: 5;
       @extend %terminal_font_style;
    }
  }

  .wrap-term {
    max-width: $width_box;
    margin-left: 7px !important;
    margin-top: -1px !important;
  }
  .home-terminal {
    max-width: $width_box;
  }
}


// change themes
:root[data-theme="light"] {
  --bg-color: #{theme-color-terminal(bg-color, light)};
  --text-color: #{theme-color-terminal(text-color, light)};
  --text-muted-color: #{theme-color-terminal(text-muted-color, light)};
  --link-color: #{theme-color-terminal(link-color, light)};
}
:root[data-theme="dark"] {
  --bg-color: #{theme-color-terminal(bg-color, dark)};
  --text-color: #{theme-color-terminal(text-color, dark)};
  --text-muted-color: #{theme-color-terminal(text-muted-color, dark)};
  --link-color: #{theme-color-terminal(link-color, dark)};
}
